WebCrawling
-웹페이지의 종류
    정적페이지 : 페이지의 데이터가 변경될때 URL이 변경 O
    동적페이지 : 페이지의 데이터가 변경될때 URL이 변경 x
requests package
브라우저의 URL을 입력하면 서버에서 데이터를 다운받아 화면에 출력:URL->DATA
requests 패키지 : URL ->DATA

requests 이용
받아오는 문자열에 따라 두가지 방법으로 구분
    json 문자열로 받아서 파싱하는 방법 : 주로 동적 페이지 크롤링할때 사용
    html 문자열로 받아서 파싱하는 방법 : 주로 정적 페이지 크롤링할때 사용



#1. 웹서비스를 분석 : 크롬 개발자도구 :URL
#2. request > response :JSON(str)
#3. JSON(str) >list,dict > DataFrame
#4.함수 만들기
#params : pagesize, page

==>https://github.com/Young-Lee314/python-.git(웹크롤링1 참조)

#docstring : 함수를 사용하는 방법을 문자열로 작성
#help(), shift+tab(설명)
help(stock_price)

#데이터 분석
#상관관계 분석 : 두 데이터 집합 사이에 어떤 관계가 있는지 확인하는 분석방법
#원달러 환율이 높으면 코스피,코스닥 주가 지수가 낮다. >음의 상관관계를 갖는다.

#피어슨 상관계수 : df.corr()
#1과 가까울수록 강한 양의 상관관계를 갖는다.
#-1과 가까울수록 강한 음의 상관관계를 갖는다.
#0과 가까울수록 관계가 없다

#컬럼의 데이터 타입 변경 : str > float
#df[column].apply() : 모든 데이터를 함수에 대입한 결과를 출력

#apply(func) : 모든 데이터를 func을 적용시킨 결과 출력

#lambda :일회성 함수
#사용이유 : 간단한 함수를 메모리를 절약하여 사용


API
application programing interface
api를 사용해서 데이터를 수집하는것은 서비스에 데이터를 제공하는 공식적인 방법으로 데이터 수집
naver api : papago api : 번역 서비스


#1. APP 등록 > app_key(request_token)
#https://developers.naver.com
#2. Naver API Document 확인 >URL
#3. request(url, app_key) >reponse(json) : JSON(str)
#4. JSON(str) > list, dict > DataFrame
#5. 함수로 작성
#6. 한글 excel 파일을 영문excel 파일로 변경

==>https://github.com/Young-Lee314/python-.git(웹크롤링2 참조)

#json.dumps()
#인터넷 트래픽에서는 영문, 숫자, 특수문자만 사용가능
#한글과 같은 문자를 인코딩(영문,숫자,특수문자)

# utf-8-sig : excel 에서 사용하는 인코딩 방식과 호환이 되는 utf-8 인코딩 방식
covid.to_excel("covid_en.xlsx", index=False, encoding="utf-8-sig")

#함수 : Scope
#변수를 선언할때 함수 밖에서 선언하는것과함수 안에서 선언하는 변수의 메ㄹ모리 저장공간이 다릅니다
#전역영역 : 함수 밖의 영역
#지역영역 : 함수 안의 영역
#global : 지역영역에서 전역영역에 있는 변수를 가져올때 사용하는 명령어

# 실습 과제
# https://finance.daum.net/exchanges
# headers : referer, user-agent 설정


url = "https://finance.daum.net/api/exchanges/FRX.KRWUSD/days?perPage=10&page=5&pagination=true"
headers = {
    "user-agent" :"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36", 
    "referer" : "https://finance.daum.net/exchanges/FRX.KRWUSD",
}
response = requests.get(url,headers=headers)
response